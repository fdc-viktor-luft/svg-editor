{"version":3,"sources":["ui/Header.js","util/Util.js","logic/index.js","store/store.js","store/svg-store.js","store/editor-store.js","ui/svg/StoredSvg.js","ui/svg/StoredSvgList.js","ui/picker/points.js","ui/editor/Screen.js","ui/editor/Result.js","ui/editor/Editor.js","ui/Main.js","util/event-util.js","form/common.js","form/select.js","ui/editor/config/AttributesConfig.js","ui/picker/PointPicker.js","ui/picker/ValuePicker.js","ui/editor/config/CommandConfig.js","ui/editor/config/Config.js","ui/icons/Icon.js","ui/editor/Navigator.js","serviceWorker.js","index.js","ui/App.js"],"names":["Header","react_default","a","createElement","src","process","alt","Util","array","num","Array","apply","length","rounded","precision","Number","toFixed","classNames","_len","arguments","classes","_key","filter","clazz","Boolean","join","nextArray","before","index","value","Object","toConsumableArray","slice","concat","requiredPointsForCommand","command","test","requiredValuesForCommand","parseCommand","letter","points","values","numbers","substr","replace","split","map","_","x","y","parsePoints","parseSpecifiedCommand","applySpaceToPositive","String","commandToString","_ref","trim","v","commandsToString","commands","parsePath","path","match","commandScale","scaling","objectSpread","point","pointScale","currentPointer","gone","found","undefined","zFound","setFound","_ref2","setGone","_ref3","addGone","_ref4","reversed","reverse","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","SVG","currentPointerByPath","transition","c","pointTransition","commandTransition","scale","from","to","window","initialAttributes","width","height","fill","stroke","initialSvgInfo","name","attr","initialCommands","initialEditorState","svg","aPoint","aCommand","oPoint","edit","Store","Wired","store","svgList","currentSvg","editor","node","initialSvgList","get","parsed","JSON","parse","Persistore","isArray","e","getCurrent","current","list","isNaN","set","SvgStore","push","stringify","data","setCurrent","toString","remove","stateChanges","provided","activateCommand","updateCommand","_Store$data$editor4","EditorStore","clear","select","updatePoint","_Store$data$editor3","updateValue","vIndex","_Store$data$editor2","addCommand","getInitialValuesForCommand","removeCommand","cIndex","_Store$data$editor","StoredSvg","className","viewBox","strokeLinecap","linecap","strokeLinejoin","linejoin","strokeWidth","d","onClick","StoredSvgListContainer","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","props","StoredSvg_StoredSvg","Component","StoredSvgList","wire","PointColors","getRelativeAddition","toLowerCase","ScreenContainer","_getPrototypeOf2","_this","args","call","screen","React","createRef","getScreenBounding","_getBoundingClientRec","getBoundingClientRect","top","left","click","event","_commands$aCommand","clientPos","clientY","scrollY","clientX","scrollX","relativeAddition","bounding","clicked","pageXOffset","pageYOffset","_commands$aCommand2","pointRadius","Math","ceil","ref","p","cx","cy","r","Screen","attributeString","Result","_editor$svg","fillString","strokeString","EditorContainer","createNew","Editor","Main","EventUtil","cb","preventDefault","target","change","type","convertToNumber","Label","label","DisplayError","error","Option","Select","required","onChange","onBlur","options","disabled","optionValues","o","i","getOptionValues","handlerRemapped","handler","optionValue","indexOf","currentIndex","find","option","common_Label","select_Option","common_DisplayError","toSelectOptions","placeholder","StrokeLinecapOptions","StrokeLinejoinOptions","AttributesConfigContainer","onChangeSvgAttributes","attrChanges","onChangeWidth","onChangeHeight","onChangeFill","onChooseStroke","strokeChosen","onChangeStroke","onChangeStrokeWidth","onChangeStrokeLinecap","onChangeStrokeLinejoin","_this2","_this$props$attr","checked","Fragment","select_Select","AttributesConfig","onPointChange","coordinate","defineProperty","PointPicker","active","onActivate","color","style","border","backgroundColor","ValuePicker","onValueChange","COMMAND_OPTIONS","CommandConfigContainer","onChooseCommand","onActivatePoint","onActivateCommand","onRemoveCommand","stopPropagation","PointPicker_PointPicker","ValuePicker_ValuePicker","CommandConfig","ConfigContainer","onChangeName","onSubmit","htmlFor","Config","currentColor","bool","IconContainer","Icon","Icon_IconContainer","assign","NavigatorContainer","state","open","toggle","setState","Navigator","isLocalhost","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","root","document","getElementById","ReactDOM","render","Header_Header","Main_Main","URL","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.caab91d3.chunk.js","sourcesContent":["// @flow\n\nimport React from 'react';\n\nexport const Header = () => (\n    <header>\n        <img src={process.env.PUBLIC_URL + '/svg_editor_logo.svg'} alt=\"logo\" />\n    </header>\n);\n","// @flow\n\nconst classNames = (...classes: any[]): string => classes.filter((clazz?: string) => Boolean(clazz)).join(' ');\n\nconst array = (num: number): Array<void> => Array.apply(null, ({ length: num }: any));\n\nconst nextArray = <T>(before: T[], index: number, value: T): T[] => [\n    ...before.slice(0, index),\n    value,\n    ...before.slice(index + 1),\n];\n\nconst rounded = (num: number, precision: number): number => Number(num.toFixed(precision));\n\nexport const Util = { array, rounded, classNames, nextArray };","/**\n * This file is part of svg-editor which is released under MIT license.\n *\n * The LICENSE file can be found in the root directory of this project.\n *\n * @flow\n */\n\nimport { Util } from '../util/Util';\n\nexport type Point = { x: number, y: number };\n\n/**\n * Listing of all available supported commands:\n *\n * M x y (or m dx dy)\n * L x y (or l dx dy)\n * H x (or h dx)\n * V y (or v dy)\n * Z (or z)\n * C x1 y1, x2 y2, x y (or c dx1 dy1, dx2 dy2, dx dy)\n * S x2 y2, x y (or s dx2 dy2, dx dy)\n * Q x1 y1, x y (or q dx1 dy1, dx dy)\n * T x y (or t dx dy)\n * A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n * a rx ry x-axis-rotation large-arc-flag sweep-flag dx dy\n *\n * For more examples and information, see: https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\n */\nexport type CommandLetter =\n    | 'M'\n    | 'm'\n    | 'Q'\n    | 'q'\n    | 'L'\n    | 'l'\n    | 'Z'\n    | 'z'\n    | 'A'\n    | 'a'\n    | 'C'\n    | 'c'\n    | 'T'\n    | 't'\n    | 'S'\n    | 's'\n    | 'V'\n    | 'v'\n    | 'H'\n    | 'h';\nexport type Command = { letter: CommandLetter, points: Point[], values: number[] };\n\nconst parsePoints = (numbers: number[]) => (_, index: number) => ({ x: numbers[2 * index], y: numbers[2 * index + 1] });\nconst parseSpecifiedCommand = (command: string, points: number, values: number) => {\n    const letter: CommandLetter = (command[0]: any);\n    const numbers = command\n        .substr(1)\n        .replace(/[-]+/g, ' -')\n        .replace(/[, ]+/g, ',')\n        .split(',')\n        .filter(Boolean)\n        .map(Number);\n\n    return { letter, points: Util.array(points).map(parsePoints(numbers)), values: numbers.slice(0, values) };\n};\n\nconst requiredPointsForCommand = (command: CommandLetter): number => {\n    if (/[mlt]/i.test(command)) return 1;\n    if (/[qs]/i.test(command)) return 2;\n    if (/c/i.test(command)) return 3;\n    return 0;\n};\n\nconst requiredValuesForCommand = (command: CommandLetter): number => {\n    if (/[vh]/i.test(command)) return 1;\n    if (/a/i.test(command)) return 7;\n    return 0;\n};\n\nconst parseCommand = (command: string): Command | void => {\n    const letter: CommandLetter = (command[0]: any);\n    return parseSpecifiedCommand(command, requiredPointsForCommand(letter), requiredValuesForCommand(letter));\n};\n\nconst applySpaceToPositive = (num: number): string => (num < 0 ? String(num) : ' ' + num);\n\nconst pointsToString = (points: Point[]): string =>\n    points\n        .map(({ x, y }) => `${applySpaceToPositive(x)}${applySpaceToPositive(y)}`)\n        .join('')\n        .trim();\nconst valuesToString = (values: number[]): string =>\n    values\n        .map(v => `${applySpaceToPositive(v)}`)\n        .join('')\n        .trim();\n\nconst commandToString = (command: Command): string =>\n    `${command.letter}${pointsToString(command.points)}${valuesToString(command.values)}`;\n\nconst commandsToString = (commands: Command[]): string => commands.map(commandToString).join('');\n\nconst parsePath = (path: string) => (path.match(/([a-zA-Z][ \\-.0-9]*)/g) || []).map(parseCommand).filter(Boolean);\n\nconst pointTransition = (x: number, y: number) => (point: Point): Point => ({ x: point.x + x, y: point.y + y });\n\nconst commandTransition = (command: Command, x: number, y: number): Command => {\n    const letter = command.letter;\n    switch (letter) {\n        case 'M':\n        case 'L':\n        case 'Q':\n            return { ...command, points: command.points.map(pointTransition(x, y)) };\n        default:\n            return command;\n    }\n};\n\nconst transition = (path: string, x: number, y: number): string =>\n    commandsToString(parsePath(path).map(c => commandTransition(c, x, y)));\n\nconst pointScale = (scaling: number, precision: number) => (point: Point): Point => ({\n    x: Util.rounded(point.x * scaling, precision),\n    y: Util.rounded(point.y * scaling, precision),\n});\n\nconst commandScale = (scaling: number, precision: number) => (command: Command): Command => {\n    const letter = command.letter;\n    switch (letter) {\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n        case 'Q':\n        case 'q':\n            return { ...command, points: command.points.map(pointScale(scaling, precision)) };\n        default:\n            return command;\n    }\n};\n\nconst scale = (path: string, from: number, to: number, precision: number = 0): string =>\n    commandsToString(parsePath(path).map(commandScale(to / from, precision)));\n\nconst currentPointer = (commands: Command[]): Point => {\n    // helper constants\n    const gone = { x: 0, y: 0 };\n    const found = { x: undefined, y: undefined };\n    let zFound = false;\n    // helper functions\n    const setFound = ({ x, y }: $Shape<Point>) => {\n        if (x !== undefined && found.x === undefined) found.x = x + gone.x;\n        if (y !== undefined && found.y === undefined) found.y = y + gone.y;\n    };\n    const pointFound = (): boolean => found.x !== undefined && found.y !== undefined;\n    const setGone = ({ x, y }: $Shape<Point>) => {\n        if (x !== undefined) gone.x = x;\n        if (y !== undefined) gone.y = y;\n    };\n    const addGone = ({ x, y }: $Shape<Point>) => {\n        if (x !== undefined) gone.x += x;\n        if (y !== undefined) gone.y += y;\n    };\n    // object to be traversed\n    const reversed = [...commands];\n    reversed.reverse();\n\n    // logic to find the point by traversing\n    for (const command of reversed) {\n        const { letter, points, values } = command;\n        if (zFound) {\n            if (letter === 'M') return points[0]; // early exit\n            if (letter === 'm') {\n                setGone(points[0]);\n                zFound = false; // reset that bool, because traversing now starts normally again\n            }\n            continue;\n        }\n        if (/z/i.test(letter)) zFound = true;\n        if (/[MLCSQT]/.test(letter)) setFound(points[points.length - 1]);\n        if (/[mlcsqt]/.test(letter)) addGone(points[points.length - 1]);\n        if (letter === 'h') addGone({ x: values[0] });\n        if (letter === 'H') setFound({ x: values[0] });\n        if (letter === 'v') addGone({ y: values[0] });\n        if (letter === 'V') setFound({ y: values[0] });\n        if (letter === 'a') addGone({ x: values[5], y: values[6] });\n        if (letter === 'A') setFound({ x: values[5], y: values[6] });\n        if (pointFound()) break;\n    }\n    return { x: found.x || 0, y: found.y || 0 };\n};\n\nconst currentPointerByPath = (path: string): Point => currentPointer(parsePath(path));\n\nexport const SVG = {\n    currentPointer,\n    currentPointerByPath,\n    transition,\n    parsePath,\n    commandsToString,\n    scale,\n    requiredPointsForCommand,\n    requiredValuesForCommand,\n    commandToString,\n};\n\nwindow.SVG = SVG;\n","// @flow\n\nimport { Wired } from 'react-rewired';\nimport { type Command, SVG, type Point } from '../logic';\n\nexport type StrokeLinecap = 'butt' | 'round' | 'square';\nexport type StrokeLinejoin = 'miter' | 'round' | 'bevel';\nexport const StrokeLinecaps: StrokeLinecap[] = ['butt', 'round', 'square'];\nexport const StrokeLinejoins: StrokeLinejoin[] = ['miter', 'round', 'bevel'];\n\nexport type SvgStroke = {\n    width?: number,\n    linecap?: StrokeLinecap,\n    linejoin?: StrokeLinejoin,\n};\nexport type SvgAttributes = { width: number, height: number, precision: number, fill: boolean, stroke?: SvgStroke };\nexport type SvgInfo = { name: string, path: string, attr: SvgAttributes };\nexport type EditorState = {\n    svg: SvgInfo,\n    commands: Command[],\n    aPoint: number,\n    aCommand: number,\n    oPoint?: Point,\n    edit: boolean,\n};\n\nconst initialName = 'Unnamed';\nconst initialPath = 'M0 0';\nconst initialAttributes = { width: 1000, height: 1000, precision: 0, fill: false, stroke: undefined };\nexport const initialSvgInfo = { name: initialName, path: initialPath, attr: initialAttributes };\nconst initialCommands = SVG.parsePath(initialPath);\nexport const initialEditorState: EditorState = {\n    svg: initialSvgInfo,\n    commands: initialCommands,\n    aPoint: 0,\n    aCommand: 0,\n    oPoint: undefined,\n    edit: false,\n};\n\nexport const Store = Wired.store({\n    svgList: ([]: SvgInfo[]),\n    currentSvg: 0,\n    editor: Wired.node({\n        svg: Wired.node({\n            name: initialName,\n            path: initialPath,\n            attr: Wired.node(initialAttributes),\n        }),\n        commands: initialCommands,\n        aPoint: 0,\n        aCommand: 0,\n        oPoint: (undefined: Point | void),\n        edit: false,\n    }),\n});\n\nwindow.Store = Store;\n","// @flow\n\nimport { Persistore } from 'persistore';\nimport { Store, type SvgInfo } from './store';\n\nconst _key = 'svgs';\nconst _currentKey = 'current_svg';\n\nconst initialSvgList = [];\n\nconst get = (): SvgInfo[] => {\n    try {\n        const parsed = JSON.parse((Persistore.get(_key): any));\n        return Array.isArray(parsed) ? parsed : initialSvgList;\n    } catch (e) {\n        return initialSvgList;\n    }\n};\n\nconst getCurrent = (): number | void => {\n    const current = Number(Persistore.get(_currentKey));\n    const list = get();\n    return !isNaN(current) && list[current] ? current : undefined;\n};\n\nconst setCurrent = (currentSvg?: number): void => {\n    currentSvg !== undefined ? Persistore.set(_currentKey, currentSvg.toString()) : Persistore.remove(_currentKey);\n    Store.set({ currentSvg });\n};\n\nconst persist = () => Persistore.set(_key, JSON.stringify(Store.data.svgList));\n\nconst set = (svg: SvgInfo): void => {\n    const list = get();\n    const current = getCurrent();\n    if (current !== undefined) list[current] = svg;\n    else list.push(svg);\n    Store.set({ svgList: list });\n    persist();\n};\n\nStore.set({ svgList: get(), currentSvg: getCurrent() });\n\nexport const SvgStore = { get, set, getCurrent, setCurrent };\n","// @flow\n\nimport { Persistore } from 'persistore';\nimport { SVG, type Command, type Point, type CommandLetter } from '../logic';\nimport { Store, type SvgInfo, type EditorState, type SvgAttributes, initialEditorState } from './store';\nimport { SvgStore } from './svg-store';\nimport { Util } from '../util/Util';\n\nconst _key = 'editor';\n\nconst getInitialPointsForCommand = (command: CommandLetter): Point[] =>\n    Util.array(SVG.requiredPointsForCommand(command)).map(() => ({ x: 0, y: 0 }));\n\nconst getInitialValuesForCommand = (command: CommandLetter): number[] =>\n    Util.array(SVG.requiredValuesForCommand(command)).map(() => 0);\n\nconst get = (): EditorState => {\n    try {\n        return JSON.parse(Persistore.get(_key) || '');\n    } catch (e) {\n        return initialEditorState;\n    }\n};\n\nconst persist = () => Persistore.set(_key, JSON.stringify(Store.data.editor));\n\ntype SetParams = {\n    svg?: {\n        name?: string,\n        attr?: $Shape<SvgAttributes>,\n        path?: string,\n    },\n    commands?: Command[],\n    aCommand?: number,\n    aPoint?: number,\n    oPoint?: Point,\n    edit?: boolean,\n};\n\nconst calculateStateChanges = (provided: SetParams) =>\n    provided.commands\n        ? { ...provided, svg: { ...provided.svg, path: SVG.commandsToString(provided.commands) } }\n        : provided;\n\nconst set = (stateChanges: SetParams): void => {\n    Store.set({ editor: calculateStateChanges(stateChanges) });\n    persist();\n};\n\nconst addCommand = (letter: CommandLetter): void => {\n    const { commands } = Store.data.editor;\n    set({\n        aPoint: 0,\n        commands: [\n            ...commands,\n            { letter, points: getInitialPointsForCommand(letter), values: getInitialValuesForCommand(letter) },\n        ],\n    });\n    activateCommand(commands.length);\n};\n\nconst removeCommand = (cIndex: number): void => {\n    const { commands, aCommand } = Store.data.editor;\n    if (cIndex < commands.length && cIndex > 0) {\n        const currentlySelected = cIndex === aCommand;\n        if (currentlySelected) activateCommand(cIndex - 1);\n        set({\n            commands: [...commands.slice(0, cIndex), ...commands.slice(cIndex + 1)],\n        });\n    }\n};\n\nconst activateCommand = (aCommand: number): void => {\n    const { commands } = Store.data.editor;\n    if (aCommand < commands.length) {\n        const oPoint = aCommand > 0 ? SVG.currentPointer(commands.slice(0, aCommand)) : undefined;\n        set({ aCommand, oPoint, aPoint: 0 });\n    }\n};\n\nconst updateValue = (value: number, vIndex: number = 0): void => {\n    const { commands, aCommand } = Store.data.editor;\n    const command = commands[aCommand];\n    updateCommand({ ...command, values: Util.nextArray(command.values, vIndex, value) });\n};\n\nconst updatePoint = (point: Point): void => {\n    const { commands, aPoint, aCommand } = Store.data.editor;\n    const command = commands[aCommand];\n    updateCommand({ ...command, points: Util.nextArray(command.points, aPoint, point) });\n};\n\nconst updateCommand = (command: Command) => {\n    const { commands, aCommand } = Store.data.editor;\n    set({ commands: Util.nextArray(commands, aCommand, command) });\n};\n\nconst select = (svg: SvgInfo, index?: number) => {\n    const { name, path, attr } = svg;\n    const { width, height, fill, stroke, precision } = attr;\n    const commands = SVG.parsePath(svg.path);\n    set({\n        svg: { name, path, attr: { width, height, fill, stroke, precision } },\n        aCommand: 0,\n        aPoint: 0,\n        commands,\n        edit: true,\n    });\n    activateCommand(commands.length - 1);\n    SvgStore.setCurrent(index);\n};\n\nconst clear = () => {\n    Persistore.remove(_key);\n    Store.set({ editor: { edit: false } });\n    SvgStore.setCurrent(undefined);\n};\n\nStore.set({ editor: get() });\n\nexport const EditorStore = {\n    get,\n    set,\n    clear,\n    select,\n    updatePoint,\n    updateValue,\n    activateCommand,\n    addCommand,\n    removeCommand,\n};\n","// @flow\n\nimport React from 'react';\nimport { type SvgInfo } from '../../store/store';\nimport { EditorStore } from '../../store/editor-store';\n\ntype StoredSvgProps = {| svg: SvgInfo, index: number |};\n\nexport const StoredSvg = ({ svg, index }: StoredSvgProps) => {\n    const { attr, path, name } = svg;\n    const { width, height, fill, stroke } = attr;\n    return (\n        <div className=\"stored-svg\">\n            <svg viewBox={`0 0 ${width} ${height}`}>\n                {path && (\n                    <path\n                        fill={fill ? 'currentColor' : 'none'}\n                        stroke={stroke ? 'currentColor' : 'none'}\n                        strokeLinecap={stroke && stroke.linecap}\n                        strokeLinejoin={stroke && stroke.linejoin}\n                        strokeWidth={stroke && stroke.width}\n                        d={path}\n                    />\n                )}\n            </svg>\n            <div className=\"label\">\n                {name}\n                <span className=\"buttons\">\n                    <button onClick={() => EditorStore.select(svg, index)}>Edit</button>\n                    <button onClick={() => EditorStore.select(svg)}>Copy</button>\n                </span>\n            </div>\n        </div>\n    );\n};\n","// @flow\n\nimport React, { Component } from 'react';\nimport { Store, type SvgInfo } from '../../store/store';\nimport { StoredSvg } from './StoredSvg';\n\ntype StoredSvgListProps = {| svgList: SvgInfo[] |};\n\nexport class StoredSvgListContainer extends Component<StoredSvgListProps> {\n    render() {\n        const { svgList } = this.props;\n        return (\n            <div className=\"store\">\n                <h2>Stored SVGs:</h2>\n                {svgList.map((svg, index) => (\n                    <StoredSvg svg={svg} index={index} key={index} />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport const StoredSvgList = Store.wire(StoredSvgListContainer, ({ svgList }) => ({ svgList }));\n","// @flow\n\nexport const PointColors = ['#66b824', '#b85032', '#2287b8'];\n","// @flow\n\nimport React, { Component } from 'react';\nimport { type Point, type CommandLetter } from '../../logic/index';\nimport { Util } from '../../util/Util';\nimport { PointColors } from '../picker/points';\nimport { type EditorState, Store } from '../../store/store';\nimport { EditorStore } from '../../store/editor-store';\n\ntype ScreenProps = {|\n    editor: EditorState,\n|};\n\nconst getRelativeAddition = (letter: CommandLetter, oPoint?: Point) =>\n    letter.toLowerCase() === letter && oPoint ? oPoint : { x: 0, y: 0 };\n\nexport class ScreenContainer extends Component<ScreenProps> {\n    screen = React.createRef();\n\n    getScreenBounding = (): { top: number, left: number, width: number, height: number } => {\n        const { top, left, width, height } = (this.screen.current: any).getBoundingClientRect();\n        return { top, left, width, height };\n    };\n\n    click = (event: any) => {\n        const { editor } = this.props;\n        const { svg, commands, aCommand, oPoint } = editor;\n        const { attr } = svg;\n        const { width, height, precision } = attr;\n        const { points, values, letter } = commands[aCommand];\n        const clientPos = { y: event.clientY + window.scrollY, x: event.clientX + window.scrollX };\n        const relativeAddition = getRelativeAddition(letter, oPoint);\n        const bounding = this.getScreenBounding();\n        const clicked = {\n            x: Util.rounded(\n                ((clientPos.x - bounding.left - window.pageXOffset) * width) / bounding.width - relativeAddition.x,\n                precision\n            ),\n            y: Util.rounded(\n                ((clientPos.y - bounding.top - window.pageYOffset) * height) / bounding.height - relativeAddition.y,\n                precision\n            ),\n        };\n        if (points.length) {\n            EditorStore.updatePoint(clicked);\n        } else if (values.length) {\n            if (/h/i.test(letter)) EditorStore.updateValue(clicked.x);\n            if (/v/i.test(letter)) EditorStore.updateValue(clicked.y);\n        }\n    };\n\n    render() {\n        const { editor } = this.props;\n        const { svg, commands, aCommand, oPoint } = editor;\n        const { path, attr } = svg;\n        const { width, height, fill, stroke } = attr;\n        const { points, letter } = commands[aCommand];\n        const pointRadius = Math.ceil(width / 100);\n        const relativeAddition = getRelativeAddition(letter, oPoint);\n        return (\n            <div className=\"screen\" onClick={this.click} ref={this.screen}>\n                <svg className=\"screen-bg\" viewBox={`0 0 ${width} ${height}`}>\n                    {path && (\n                        <path\n                            stroke={stroke ? 'currentColor' : 'none'}\n                            strokeLinecap={stroke && stroke.linecap}\n                            strokeLinejoin={stroke && stroke.linejoin}\n                            strokeWidth={stroke && stroke.width}\n                            fill={fill ? 'currentColor' : 'none'}\n                            d={path}\n                        />\n                    )}\n                    {points.map((p: Point, index: number) => (\n                        <circle\n                            key={index}\n                            fill={PointColors[index]}\n                            cx={p.x + relativeAddition.x}\n                            cy={p.y + relativeAddition.y}\n                            r={pointRadius}\n                        />\n                    ))}\n                    {oPoint && (\n                        <circle\n                            fill=\"none\"\n                            stroke=\"black\"\n                            strokeWidth={pointRadius / 5}\n                            cx={oPoint.x}\n                            cy={oPoint.y}\n                            r={pointRadius}\n                        />\n                    )}\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport const Screen = Store.wire(ScreenContainer, ({ editor }) => ({ editor }));\n","// @flow\n\nimport React from 'react';\nimport { Store, type EditorState, type SvgStroke } from '../../store/store';\n\ntype ResultProps = {| editor: EditorState |};\n\nconst fillString = (fill: boolean) => `fill=\"${fill ? 'currentColor' : 'none'}\"`;\nconst attributeString = (name: string, value?: number | string): string => (value ? ` ${name}=\"${value}\"` : '');\nconst strokeString = (stroke?: SvgStroke) =>\n    stroke\n        ? ` stroke=\"currentColor\"${attributeString('stroke-width', stroke.width)}${attributeString(\n              'stroke-linecap',\n              stroke.linecap\n          )}${attributeString('stroke-linejoin', stroke.linejoin)}`\n        : '';\n\nexport const ResultContainer = ({ editor }: ResultProps) => {\n    const { path, attr } = editor.svg;\n    const { width, height, fill, stroke } = attr;\n    return (\n        <div className=\"result\">\n            <code>\n                {`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 ${width} ${height}'>`}\n                <br />\n                <span className=\"tab\">{`<path ${fillString(fill)}${strokeString(stroke)}`}</span>\n                <br />\n                <span className=\"tab path\">{`d=\"${path}\"`}</span>\n                <br />\n                <span className=\"tab\">{'/>'}</span>\n                <br />\n                {`</svg>`}\n            </code>\n        </div>\n    );\n};\n\nexport const Result = Store.wire(ResultContainer, ({ editor }) => ({ editor }));\n","// @flow\n\nimport React, { Component } from 'react';\nimport { Store, type EditorState, initialSvgInfo } from '../../store/store';\nimport { Screen } from './Screen';\nimport { Result } from './Result';\nimport { EditorStore } from '../../store/editor-store';\n\ntype EditorProps = {| editor: EditorState |};\n\nexport class EditorContainer extends Component<EditorProps> {\n    createNew = () => EditorStore.select(initialSvgInfo);\n\n    render() {\n        const { editor } = this.props;\n        if (!editor.edit)\n            return (\n                <div className=\"editor-placeholder\" onClick={this.createNew}>\n                    <div>Create new SVG</div>\n                </div>\n            );\n\n        return (\n            <div className=\"editor\">\n                <Screen />\n                <Result />\n            </div>\n        );\n    }\n}\n\nexport const Editor = Store.wire(EditorContainer, ({ editor }) => ({ editor }));\n","// @flow\n\nimport React from 'react';\nimport { StoredSvgList } from './svg/StoredSvgList';\nimport { Editor } from './editor/Editor';\n\nexport const Main = () => (\n    <main>\n        <Editor />\n        <StoredSvgList />\n    </main>\n);\n","/**\n * This file is part of svg-editor which is released under MIT license.\n *\n * The LICENSE file can be found in the root directory of this project.\n *\n * @flow\n */\n\ntype InputEvent = { preventDefault: Function, target: { type?: string, value: any } };\ntype InputEventHandler = InputEvent => void;\n\nconst convertToNumber = (value: string): number | void => {\n    if (!value) return undefined;\n    const parsed = Number(value);\n    return isNaN(parsed) ? undefined : parsed;\n};\n\nconst inputHandler = (cb?: any => mixed | void): InputEventHandler => event => {\n    event.preventDefault();\n    const target = event.target;\n    const change = target.value;\n    const value = target.type === 'number' ? convertToNumber(change) : change;\n    if (cb) cb(value);\n};\n\nexport const EventUtil = { inputHandler };\n","// @flow\n\nimport React from 'react';\n\nexport const Label = ({ label }: { label: string, required?: boolean }) => <label>{label}</label>;\n\nexport const DisplayError = ({ error }: { error: string }) => <span className=\"invalid-feedback\">{error}</span>;\n","/**\n * This file is part of svg-editor which is released under MIT license.\n *\n * The LICENSE file can be found in the root directory of this project.\n *\n * @flow\n */\n\nimport React from 'react';\nimport { DisplayError, Label } from './common';\nimport { EventUtil } from '../util/event-util';\n\nexport type SelectOption<T> = { label: string, value: T };\n\ntype SelectHandler<T> = T => void;\n\ntype SelectProps<T> = {\n    value: T,\n    label?: string,\n    error?: string,\n    required?: boolean,\n    className?: string,\n    onChange: SelectHandler<T>,\n    onBlur?: SelectHandler<T>,\n    options: SelectOption<T>[],\n    disabled?: boolean,\n};\n\nconst Option = ({ label, value }: { label: string, value: string }) => <option value={value}>{label}</option>;\n\nconst getOptionValues = <T>(options: SelectOption<T>[]): string[] =>\n    options.map((o, i) => (o === undefined ? '' : typeof o === 'string' ? o : String(i)));\n\nexport const Select = <T>({\n    value,\n    label,\n    error,\n    required,\n    className,\n    onChange,\n    onBlur,\n    options,\n    disabled,\n}: SelectProps<T>) => {\n    const optionValues = getOptionValues(options);\n    const handlerRemapped = (handler?: SelectHandler<T>) => (optionValue: string) =>\n        handler && handler(options[optionValues.indexOf(optionValue)].value);\n    const currentIndex = options.indexOf(options.find(option => option.value === value));\n    return (\n        <div className={className}>\n            {label && <Label {...{ label, required }} />}\n            <select\n                disabled={disabled}\n                onChange={EventUtil.inputHandler(handlerRemapped(onChange))}\n                onBlur={EventUtil.inputHandler(handlerRemapped(onBlur))}\n                value={currentIndex === -1 ? '' : String(currentIndex)}>\n                {options.map((option: SelectOption<T>, index: number) => (\n                    <Option label={option.label} value={optionValues[index]} key={index} />\n                ))}\n            </select>\n            {error && <DisplayError error={error} />}\n        </div>\n    );\n};\n\nexport const toSelectOptions = <T: string>(options: Array<T>, placeholder: string): SelectOption<T | void>[] => [\n    { label: placeholder, value: undefined },\n    ...options.map(c => ({ label: c, value: c })),\n];\n","// @flow\n\nimport React, { Component } from 'react';\nimport { EventUtil } from '../../../util/event-util';\nimport {\n    Store,\n    type SvgAttributes,\n    type SvgStroke,\n    StrokeLinecaps,\n    StrokeLinejoins,\n    type StrokeLinejoin,\n    type StrokeLinecap,\n} from '../../../store/store';\nimport { EditorStore } from '../../../store/editor-store';\nimport { Select, toSelectOptions } from '../../../form/select';\n\nconst StrokeLinecapOptions = toSelectOptions(StrokeLinecaps, 'Linecap...');\nconst StrokeLinejoinOptions = toSelectOptions(StrokeLinejoins, 'Linejoin...');\n\ntype AttributesConfigProps = {| attr: SvgAttributes |};\n\nexport class AttributesConfigContainer extends Component<AttributesConfigProps> {\n    onChangeSvgAttributes = (attrChanges: $Shape<SvgAttributes>) => {\n        EditorStore.set({ svg: { attr: { ...attrChanges } } });\n    };\n    onChangeWidth = (width?: number) => width && width > 0 && this.onChangeSvgAttributes({ width });\n    onChangeHeight = (height?: number) => height && height > 0 && this.onChangeSvgAttributes({ height });\n    onChangeFill = (fill: boolean) => this.onChangeSvgAttributes({ fill });\n    onChooseStroke = (strokeChosen: boolean) => this.onChangeSvgAttributes({ stroke: strokeChosen ? {} : undefined });\n    onChangeStroke = (stroke: SvgStroke) =>\n        this.onChangeSvgAttributes({ stroke: { ...this.props.attr.stroke, ...stroke } });\n    onChangeStrokeWidth = (width?: number) => this.onChangeStroke({ width: width && width >= 0 ? width : undefined });\n    onChangeStrokeLinecap = (linecap?: StrokeLinecap) => this.onChangeStroke({ linecap });\n    onChangeStrokeLinejoin = (linejoin?: StrokeLinejoin) => this.onChangeStroke({ linejoin });\n\n    render() {\n        const { width, height, fill, stroke } = this.props.attr;\n        return (\n            <div className=\"attributes\">\n                <label>Width</label>\n                <input type=\"number\" value={width} onChange={EventUtil.inputHandler(this.onChangeWidth)} />\n                <label>Height</label>\n                <input type=\"number\" value={height} onChange={EventUtil.inputHandler(this.onChangeHeight)} />\n                <label>Fill</label>\n                <input type=\"checkbox\" checked={fill} onChange={() => this.onChangeFill(!fill)} />\n                <label>Stroke</label>\n                <input type=\"checkbox\" checked={!!stroke} onChange={() => this.onChooseStroke(!stroke)} />\n                {stroke && (\n                    <>\n                        <label>Stroke-Width</label>\n                        <input\n                            type=\"number\"\n                            value={stroke.width || ''}\n                            onChange={EventUtil.inputHandler(this.onChangeStrokeWidth)}\n                        />\n                        <Select\n                            label=\"Stroke-Linecap\"\n                            value={stroke.linecap}\n                            options={StrokeLinecapOptions}\n                            onChange={this.onChangeStrokeLinecap}\n                        />\n                        <Select\n                            label=\"Stroke-Linejoin\"\n                            value={stroke.linejoin}\n                            options={StrokeLinejoinOptions}\n                            onChange={this.onChangeStrokeLinejoin}\n                        />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nexport const AttributesConfig = Store.wire(AttributesConfigContainer, ({ editor }) => ({ attr: editor.svg.attr }));\n","// @flow\n\nimport React from 'react';\nimport type { Point } from '../../logic/index';\nimport { EventUtil } from '../../util/event-util';\n\nconst onPointChange = (point: Point, coordinate: 'x' | 'y', onChange: Point => void): * =>\n    EventUtil.inputHandler((num: number) => onChange({ ...point, [coordinate]: Number(num) }));\n\ntype PointPickerProps = {\n    value: Point,\n    onChange: Point => void,\n    active: boolean,\n    onActivate: void => void,\n    color: string,\n};\n\nexport const PointPicker = ({ value, onChange, active, onActivate, color }: PointPickerProps) => (\n    <div\n        className=\"point-picker\"\n        style={{ border: `2px solid ${color}`, backgroundColor: active ? color : undefined }}\n        onClick={onActivate}>\n        <label>Point</label>\n        <input type=\"number\" value={value.x} onChange={onPointChange(value, 'x', onChange)} />\n        <input type=\"number\" value={value.y} onChange={onPointChange(value, 'y', onChange)} />\n    </div>\n);\n","// @flow\n\nimport React from 'react';\nimport { EventUtil } from '../../util/event-util';\nimport { EditorStore } from '../../store/editor-store';\n\nconst onValueChange = (index: number): * =>\n    EventUtil.inputHandler((value: number) => EditorStore.updateValue(Number(value), index));\n\ntype ValuePickerProps = {\n    value: number,\n    index: number,\n};\n\nexport const ValuePicker = ({ value, index }: ValuePickerProps) => (\n    <div className=\"point-picker\">\n        <label>Value</label>\n        <input type=\"number\" value={value} onChange={onValueChange(index)} />\n    </div>\n);\n","// @flow\n\nimport React, { Component } from 'react';\nimport { type CommandLetter, type Point } from '../../../logic/index';\nimport { Select } from '../../../form/select';\nimport { Util } from '../../../util/Util';\nimport { PointPicker } from '../../picker/PointPicker';\nimport { PointColors } from '../../picker/points';\nimport { Store, type EditorState } from '../../../store/store';\nimport { EditorStore } from '../../../store/editor-store';\nimport { ValuePicker } from '../../picker/ValuePicker';\n\nconst COMMANDS: Array<CommandLetter | void> = [\n    undefined,\n    'M',\n    'm',\n    'Q',\n    'q',\n    'L',\n    'l',\n    'z',\n    'A',\n    'a',\n    'C',\n    'c',\n    'T',\n    't',\n    'S',\n    's',\n    'V',\n    'v',\n    'H',\n    'h',\n];\nconst COMMAND_OPTIONS = COMMANDS.map(c => ({ label: c === undefined ? 'Add Command...' : c, value: c }));\n\ntype CommandConfigProps = {| editor: EditorState |};\n\nexport class CommandConfigContainer extends Component<CommandConfigProps> {\n    onChooseCommand = (letter?: CommandLetter) => letter && EditorStore.addCommand(letter);\n\n    onActivatePoint = (index: number) => () => EditorStore.set({ aPoint: index });\n    onActivateCommand = (aCommand: number) => () => EditorStore.activateCommand(aCommand);\n    onRemoveCommand = (aCommand: number) => (event: any) => {\n        event.stopPropagation();\n        EditorStore.removeCommand(aCommand);\n    };\n\n    render() {\n        const { editor } = this.props;\n        const { commands, aPoint, aCommand } = editor;\n        const { points, values } = commands[aCommand];\n        return (\n            <div className=\"commands\">\n                <Select value={undefined} options={COMMAND_OPTIONS} onChange={this.onChooseCommand} />\n                {commands.map((c, index) => (\n                    <div\n                        className={Util.classNames('command', index === aCommand && 'active')}\n                        key={index}\n                        onClick={this.onActivateCommand(index)}>\n                        {c.letter}\n                        <button onClick={this.onRemoveCommand(index)} type=\"button\">\n                            Remove\n                        </button>\n                    </div>\n                ))}\n                {points.map((p: Point, index: number) => (\n                    <PointPicker\n                        key={index}\n                        value={p}\n                        active={index === aPoint}\n                        onChange={EditorStore.updatePoint}\n                        onActivate={this.onActivatePoint(index)}\n                        color={PointColors[index]}\n                    />\n                ))}\n                {values.map((v: number, index: number) => (\n                    <ValuePicker key={index} value={v} index={index} />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport const CommandConfig = Store.wire(CommandConfigContainer, ({ editor }) => ({ editor }));\n","// @flow\n\nimport React, { Component } from 'react';\nimport { EventUtil } from '../../../util/event-util';\nimport { Store, type EditorState } from '../../../store/store';\nimport { EditorStore } from '../../../store/editor-store';\nimport { SvgStore } from '../../../store/svg-store';\nimport { AttributesConfig } from './AttributesConfig';\nimport { CommandConfig } from './CommandConfig';\n\ntype ConfigProps = {| editor: EditorState |};\n\nexport class ConfigContainer extends Component<ConfigProps> {\n    onChangeName = (name: string) => EditorStore.set({ svg: { name } });\n\n    onSubmit = () => {\n        const { editor } = this.props;\n        SvgStore.set(editor.svg);\n        EditorStore.clear();\n    };\n\n    render() {\n        return (\n            <div className=\"config\">\n                <div className=\"controls\">\n                    <div className=\"svg-name\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input\n                            name=\"name\"\n                            type=\"string\"\n                            value={this.props.editor.svg.name}\n                            onChange={EventUtil.inputHandler(this.onChangeName)}\n                        />\n                    </div>\n                    <AttributesConfig />\n                    <CommandConfig />\n                    <div className=\"buttons\">\n                        <button className=\"clear\" onClick={EditorStore.clear}>\n                            Clear\n                        </button>\n                        <button className=\"submit\" onClick={this.onSubmit}>\n                            Submit\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport const Config = Store.wire(ConfigContainer, ({ editor }) => ({ editor }));\n","// @flow\n\nimport React from 'react';\n\ntype IconContainerProps = {|\n    className?: string,\n    path: string,\n    width: number,\n    height: number,\n    fill?: boolean,\n    stroke?: boolean,\n|};\n\nconst currentColor = (bool?: boolean): string | void => (bool ? 'currentColor' : 'none');\n\nconst IconContainer = ({ className, path, width, height, fill, stroke }: IconContainerProps) => (\n    <svg className={className ? className + ' icon' : 'icon'} viewBox={`0 0 ${width} ${height}`}>\n        <path fill={currentColor(fill)} stroke={currentColor(stroke)} d={path} />\n    </svg>\n);\n\ntype IconProps = {|\n    className?: string,\n|};\n\nexport const Icon = {\n    ArrowUp: (props: IconProps) => (\n        <IconContainer path=\"M1 5l4-4l4 4m-4-4v8\" width={10} height={10} stroke {...props} />\n    ),\n};\n","// @flow\n\nimport React, { Component } from 'react';\nimport { Store, type EditorState } from '../../store/store';\nimport { Config } from './config/Config';\nimport { Icon } from '../icons/Icon';\nimport { Util } from '../../util/Util';\n\ntype NavigatorProps = {| editor: EditorState |};\ntype NavigatorState = { open: boolean };\n\nexport class NavigatorContainer extends Component<NavigatorProps, NavigatorState> {\n    state: NavigatorState = { open: true };\n\n    toggle = () => this.setState(({ open }) => ({ open: !open }));\n\n    render() {\n        const { open } = this.state;\n        const { editor } = this.props;\n        if (!editor.edit) return null;\n\n        return (\n            <div className={Util.classNames('navigator', open && 'open')}>\n                <div onClick={this.toggle}>\n                    <Icon.ArrowUp className=\"visibility-toggle\" />\n                </div>\n                <Config />\n            </div>\n        );\n    }\n}\n\nexport const Navigator = Store.wire(NavigatorContainer, ({ editor }) => ({ editor }));\n","// @noflow\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\n\n// $FlowFixMe\nimport './assets/index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './ui/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Store } from './store/store';\n\nconst root = document.getElementById('root');\nroot &&\n    ReactDOM.render(\n        <Store.root>\n            <App />\n        </Store.root>,\n        root\n    );\n\nserviceWorker.register();\n","// @flow\n\nimport React from 'react';\nimport { Header } from './Header';\nimport { Main } from './Main';\nimport { Navigator } from './editor/Navigator';\n\nexport const App = () => (\n    <div className=\"App\">\n        <Header />\n        <Main />\n        <Navigator />\n    </div>\n);\n"],"sourceRoot":""}